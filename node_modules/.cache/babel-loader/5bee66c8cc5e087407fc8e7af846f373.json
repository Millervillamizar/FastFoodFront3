{"ast":null,"code":"import { REGISTERUSER, REGISTERBUSINESS, RECOVERYKEY, USERLOGIN, USERLOGINGOOGLE } from \"./action-types\";\nimport axios from 'axios';\n\n//Registramos usuario \nexport const register_user = dataquery => {\n  return async dispatch => {\n    try {\n      alert(\"Entro al dispach\");\n      const userData = {\n        username: dataquery.username,\n        email: dataquery.email,\n        password: dataquery.password\n      };\n      alert(\"usuario \" + userData.username);\n      const endpoint = 'http://localhost:5000/users/create';\n      const response = await axios.post(endpoint, userData);\n      const userDatauser = response.data;\n\n      // console.log(\"Datos encontrados\", JSON.stringify(userDatauser));\n\n      dispatch({\n        type: REGISTERUSER,\n        payload: userDatauser\n      });\n    } catch (error) {\n      console.log(\"Error al enviar la información\", error.message);\n    }\n  };\n};\n\n//Registramos empresa \nexport const register_business = dataquery => {\n  return async dispatch => {\n    try {\n      const endpoint = 'http://localhost:3001/atleticos/register';\n      const response = await axios.post(endpoint, dataquery);\n      const userData = response.data;\n      console.log(\"Datos encontrados\", JSON.stringify(userData));\n      if (userData && userData.save === 'yes') {\n        dispatch({\n          type: REGISTERBUSINESS,\n          payload: userData\n        });\n      } else {\n        alert('Error al registrar el usuario');\n      }\n    } catch (error) {\n      console.log(\"Error al enviar la información\", error.message);\n    }\n  };\n};\n\n//REcuperar contraseña\n\nexport const recovery_key_user = dataquery => {\n  return async dispatch => {\n    try {\n      const endpoint = 'http://localhost:3001/atleticos/register';\n      const response = await axios.post(endpoint, dataquery);\n      const userData = response.data;\n      console.log(\"Datos encontrados\", JSON.stringify(userData));\n      if (userData && userData.save === 'yes') {\n        dispatch({\n          type: RECOVERYKEY,\n          payload: userData\n        });\n      } else {\n        alert('Error al registrar el usuario');\n      }\n    } catch (error) {\n      console.log(\"Error al enviar la información\", error.message);\n    }\n  };\n};\n\n//Loguear usuario\nexport const login_User = dataquery => {\n  return async dispatch => {\n    try {\n      const endpoint = 'http://localhost:5000/users/login';\n      const response = await axios.post(endpoint, dataquery);\n      dispatch({\n        type: USERLOGIN,\n        payload: response\n      });\n    } catch (error) {\n      console.log(\"Error al enviar mensaje\", error.message);\n    }\n  };\n};\n\n//Loguear usuario\nexport const login_User_Google = dataquery => {\n  return async dispatch => {\n    try {\n      const endpoint = 'http://localhost:3001/atleticos/recuperarkey';\n      const response = await axios.post(endpoint, dataquery);\n      dispatch({\n        type: USERLOGINGOOGLE,\n        payload: response\n      });\n    } catch (error) {\n      console.log(\"Error al enviar mensaje\", error.message);\n    }\n  };\n};","map":{"version":3,"names":["REGISTERUSER","REGISTERBUSINESS","RECOVERYKEY","USERLOGIN","USERLOGINGOOGLE","axios","register_user","dataquery","dispatch","alert","userData","username","email","password","endpoint","response","post","userDatauser","data","type","payload","error","console","log","message","register_business","JSON","stringify","save","recovery_key_user","login_User","login_User_Google"],"sources":["C:/Users/Luis Buelvas/Desktop/Carpeta_PI/ProyectoFinal/FastFoodFront/src/Redux/actions.js"],"sourcesContent":["import { REGISTERUSER, REGISTERBUSINESS, RECOVERYKEY, USERLOGIN, USERLOGINGOOGLE } from \"./action-types\"\r\nimport axios from 'axios'\r\n\r\n\r\n//Registramos usuario \r\nexport const register_user = (dataquery) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            alert(\"Entro al dispach\")\r\n            const userData = {\r\n                                username:dataquery.username,\r\n                                email:dataquery.email,\r\n                                password:dataquery.password\r\n            }\r\n            alert (\"usuario \"+userData.username)\r\n            const endpoint = 'http://localhost:5000/users/create';\r\n            \r\n            const response = await axios.post(endpoint, userData);\r\n            const userDatauser =response.data\r\n\r\n\r\n\r\n           // console.log(\"Datos encontrados\", JSON.stringify(userDatauser));\r\n\r\n         \r\n            dispatch({\r\n                type: REGISTERUSER,\r\n                payload: userDatauser,\r\n            });\r\n      \r\n        } catch (error) {\r\n            console.log(\"Error al enviar la información\", error.message);\r\n        }\r\n    };\r\n};\r\n\r\n//Registramos empresa \r\nexport const register_business = (dataquery) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const endpoint = 'http://localhost:3001/atleticos/register';\r\n            const response = await axios.post(endpoint, dataquery);\r\n            const userData = response.data;\r\n\r\n\r\n\r\n            console.log(\"Datos encontrados\", JSON.stringify(userData));\r\n\r\n            if (userData && userData.save === 'yes') {\r\n\r\n            dispatch({\r\n                type: REGISTERBUSINESS,\r\n                payload: userData,\r\n            });\r\n        }else{\r\n            alert('Error al registrar el usuario');\r\n        }\r\n        } catch (error) {\r\n            console.log(\"Error al enviar la información\", error.message);\r\n        }\r\n    };\r\n};\r\n\r\n\r\n//REcuperar contraseña\r\n\r\nexport const recovery_key_user = (dataquery) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const endpoint = 'http://localhost:3001/atleticos/register';\r\n            const response = await axios.post(endpoint, dataquery);\r\n            const userData = response.data;\r\n\r\n\r\n\r\n            console.log(\"Datos encontrados\", JSON.stringify(userData));\r\n\r\n            if (userData && userData.save === 'yes') {\r\n\r\n            dispatch({\r\n                type: RECOVERYKEY,\r\n                payload: userData,\r\n            });\r\n        }else{\r\n            alert('Error al registrar el usuario');\r\n        }\r\n        } catch (error) {\r\n            console.log(\"Error al enviar la información\", error.message);\r\n        }\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\n//Loguear usuario\r\nexport const login_User = (dataquery)=>{\r\n    return async (dispatch) => {\r\n        try {\r\n            const endpoint = 'http://localhost:5000/users/login';\r\n            \r\n            const response = await axios.post(endpoint, dataquery)\r\n\r\n\r\n            dispatch({\r\n                        type:USERLOGIN,\r\n                        payload:response\r\n                 })\r\n        } catch (error) {\r\n            console.log(\"Error al enviar mensaje\", error.message);\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n//Loguear usuario\r\nexport const login_User_Google = (dataquery)=>{\r\n    return async (dispatch) => {\r\n        try {\r\n            const endpoint = 'http://localhost:3001/atleticos/recuperarkey';\r\n            \r\n            const response = await axios.post(endpoint, dataquery)\r\n\r\n\r\n            dispatch({\r\n                        type:USERLOGINGOOGLE,\r\n                        payload:response\r\n                 })\r\n        } catch (error) {\r\n            console.log(\"Error al enviar mensaje\", error.message);\r\n        }\r\n\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}