{"ast":null,"code":"import { REGISTERUSER, REGISTERBUSINESS, RECOVERYKEY, USERLOGIN, USERLOGINGOOGLE } from \"./action-types\";\nimport axios from 'axios';\n\n//Registramos usuario \nexport const register_user = dataquery => {\n  return async dispatch => {\n    try {\n      const endpoint = 'http://localhost:5000/users/create';\n      const response = await axios.post(endpoint, dataquery);\n      const userData = response.data;\n      console.log(\"Datos encontrados\", JSON.stringify(userData));\n      dispatch({\n        type: REGISTERUSER,\n        payload: userData\n      });\n    } catch (error) {\n      console.log(\"Error al enviar la información\", error.message);\n    }\n  };\n};\n\n//Registramos empresa \nexport const register_business = dataquery => {\n  return async dispatch => {\n    try {\n      const endpoint = 'http://localhost:3001/atleticos/register';\n      const response = await axios.post(endpoint, dataquery);\n      const userData = response.data;\n      console.log(\"Datos encontrados\", JSON.stringify(userData));\n      if (userData && userData.save === 'yes') {\n        dispatch({\n          type: REGISTERBUSINESS,\n          payload: userData\n        });\n      } else {\n        alert('Error al registrar el usuario');\n      }\n    } catch (error) {\n      console.log(\"Error al enviar la información\", error.message);\n    }\n  };\n};\n\n//REcuperar contraseña\n\nexport const recovery_key_user = dataquery => {\n  return async dispatch => {\n    try {\n      const endpoint = 'http://localhost:3001/atleticos/register';\n      const response = await axios.post(endpoint, dataquery);\n      const userData = response.data;\n      console.log(\"Datos encontrados\", JSON.stringify(userData));\n      if (userData && userData.save === 'yes') {\n        dispatch({\n          type: RECOVERYKEY,\n          payload: userData\n        });\n      } else {\n        alert('Error al registrar el usuario');\n      }\n    } catch (error) {\n      console.log(\"Error al enviar la información\", error.message);\n    }\n  };\n};\n\n//Loguear usuario\nexport const login_User = dataquery => {\n  return async dispatch => {\n    try {\n      const endpoint = 'http://localhost:5000/users/login';\n      const response = await axios.post(endpoint, dataquery);\n      dispatch({\n        type: USERLOGIN,\n        payload: response\n      });\n    } catch (error) {\n      console.log(\"Error al enviar mensaje\", error.message);\n    }\n  };\n};\n\n//Loguear usuario\nexport const login_User_Google = dataquery => {\n  return async dispatch => {\n    try {\n      const endpoint = 'http://localhost:3001/atleticos/recuperarkey';\n      const response = await axios.post(endpoint, dataquery);\n      dispatch({\n        type: USERLOGINGOOGLE,\n        payload: response\n      });\n    } catch (error) {\n      console.log(\"Error al enviar mensaje\", error.message);\n    }\n  };\n};","map":{"version":3,"names":["REGISTERUSER","REGISTERBUSINESS","RECOVERYKEY","USERLOGIN","USERLOGINGOOGLE","axios","register_user","dataquery","dispatch","endpoint","response","post","userData","data","console","log","JSON","stringify","type","payload","error","message","register_business","save","alert","recovery_key_user","login_User","login_User_Google"],"sources":["C:/Users/Luis Buelvas/Desktop/Carpeta_PI/ProyectoFinal/FastFoodFront/src/Redux/actions.js"],"sourcesContent":["import { REGISTERUSER, REGISTERBUSINESS, RECOVERYKEY, USERLOGIN, USERLOGINGOOGLE } from \"./action-types\"\r\nimport axios from 'axios'\r\n\r\n\r\n//Registramos usuario \r\nexport const register_user = (dataquery) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const endpoint = 'http://localhost:5000/users/create';\r\n            const response = await axios.post(endpoint, dataquery);\r\n            const userData = response.data;\r\n\r\n\r\n\r\n            console.log(\"Datos encontrados\", JSON.stringify(userData));\r\n\r\n         \r\n            dispatch({\r\n                type: REGISTERUSER,\r\n                payload: userData,\r\n            });\r\n      \r\n        } catch (error) {\r\n            console.log(\"Error al enviar la información\", error.message);\r\n        }\r\n    };\r\n};\r\n\r\n//Registramos empresa \r\nexport const register_business = (dataquery) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const endpoint = 'http://localhost:3001/atleticos/register';\r\n            const response = await axios.post(endpoint, dataquery);\r\n            const userData = response.data;\r\n\r\n\r\n\r\n            console.log(\"Datos encontrados\", JSON.stringify(userData));\r\n\r\n            if (userData && userData.save === 'yes') {\r\n\r\n            dispatch({\r\n                type: REGISTERBUSINESS,\r\n                payload: userData,\r\n            });\r\n        }else{\r\n            alert('Error al registrar el usuario');\r\n        }\r\n        } catch (error) {\r\n            console.log(\"Error al enviar la información\", error.message);\r\n        }\r\n    };\r\n};\r\n\r\n\r\n//REcuperar contraseña\r\n\r\nexport const recovery_key_user = (dataquery) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const endpoint = 'http://localhost:3001/atleticos/register';\r\n            const response = await axios.post(endpoint, dataquery);\r\n            const userData = response.data;\r\n\r\n\r\n\r\n            console.log(\"Datos encontrados\", JSON.stringify(userData));\r\n\r\n            if (userData && userData.save === 'yes') {\r\n\r\n            dispatch({\r\n                type: RECOVERYKEY,\r\n                payload: userData,\r\n            });\r\n        }else{\r\n            alert('Error al registrar el usuario');\r\n        }\r\n        } catch (error) {\r\n            console.log(\"Error al enviar la información\", error.message);\r\n        }\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\n//Loguear usuario\r\nexport const login_User = (dataquery)=>{\r\n    return async (dispatch) => {\r\n        try {\r\n            const endpoint = 'http://localhost:5000/users/login';\r\n            \r\n            const response = await axios.post(endpoint, dataquery)\r\n\r\n\r\n            dispatch({\r\n                        type:USERLOGIN,\r\n                        payload:response\r\n                 })\r\n        } catch (error) {\r\n            console.log(\"Error al enviar mensaje\", error.message);\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n//Loguear usuario\r\nexport const login_User_Google = (dataquery)=>{\r\n    return async (dispatch) => {\r\n        try {\r\n            const endpoint = 'http://localhost:3001/atleticos/recuperarkey';\r\n            \r\n            const response = await axios.post(endpoint, dataquery)\r\n\r\n\r\n            dispatch({\r\n                        type:USERLOGINGOOGLE,\r\n                        payload:response\r\n                 })\r\n        } catch (error) {\r\n            console.log(\"Error al enviar mensaje\", error.message);\r\n        }\r\n\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}